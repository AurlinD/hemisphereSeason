{"ast":null,"code":"var _jsxFileName = \"/Users/aurlin/Desktop/github/seasons-react/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      errorMessage: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // we called setstate!\n    // will take a moment to wait for location to come\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude\n    }), err => this.setState({\n      errorMessage: err.message\n    }));\n  }\n\n  componentDidUpdate() {\n    console.log(\"My componene was just updated - ut rerendered!\");\n  } // react says we have to define render for react.component\n  // render gets called a bunch of times so you don't generally want code here\n  // move it up to the constructor under the super and the initialization of state\n\n\n  render() {\n    // conditionally rendering content based on if error or lat is received\n    if (this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Error: \", this.state.errorMessage);\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Latitude: \", this.state.lat);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Loading!\");\n    }\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/Users/aurlin/Desktop/github/seasons-react/src/index.js"],"names":["React","ReactDOM","App","Component","state","lat","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","componentDidUpdate","console","log","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAYhCC,KAZgC,GAYxB;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,YAAY,EAAE;AAA3B,KAZwB;AAAA;;AAchCC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACAC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACEC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAAER,MAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;AAAvB,KAAd,CADd,EAEEC,GAAG,IAAI,KAAKH,QAAL,CAAc;AAAEP,MAAAA,YAAY,EAAEU,GAAG,CAACC;AAApB,KAAd,CAFT;AAID;;AAEDC,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACD,GAzB+B,CA2BhC;AACA;AACA;;;AACAC,EAAAA,MAAM,GAAG;AACP;AACA,QAAI,KAAKjB,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWE,YAAxB,CAAP;AACD;;AACD,QAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAKD,KAAL,CAAWC,GAA3B,CAAP;AACD,KAFD,MAEO;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AACF;;AAxC+B;;AA2ClCJ,QAAQ,CAACoB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends React.Component {\n  //not required by react\n  //very first function will be called when this class is created/instantiated\n  //good location to initialize the state\n  //constructor(props) {\n  //app is extending from react component thus we need to call super. reference to parents construcotor\n  //super(props);\n  // THIS IS THE ONLY TIME WE DO DIRECT ASSIGNMENT TO THIS.STATE\n  //this.state = { lat: null, errorMessage: \"\" };\n  //}\n\n  //other way to initialize state (SIMPLER)\n  state = { lat: null, errorMessage: \"\" };\n\n  componentDidMount() {\n    // we called setstate!\n    // will take a moment to wait for location to come\n    window.navigator.geolocation.getCurrentPosition(\n      position => this.setState({ lat: position.coords.latitude }),\n      err => this.setState({ errorMessage: err.message })\n    );\n  }\n\n  componentDidUpdate() {\n    console.log(\"My componene was just updated - ut rerendered!\");\n  }\n\n  // react says we have to define render for react.component\n  // render gets called a bunch of times so you don't generally want code here\n  // move it up to the constructor under the super and the initialization of state\n  render() {\n    // conditionally rendering content based on if error or lat is received\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div>Error: {this.state.errorMessage}</div>;\n    }\n    if (!this.state.errorMessage && this.state.lat) {\n      return <div>Latitude: {this.state.lat}</div>;\n    } else {\n      return <div>Loading!</div>;\n    }\n  }\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"]},"metadata":{},"sourceType":"module"}